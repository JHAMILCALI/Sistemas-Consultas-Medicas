/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Ventanas;

import Clases.*;
import Clases.Consultorio;
import Clases.Doctor;
import Clases.NodoConsulta;
import Clases.NodoConsultorio;
import Clases.NodoDoctor;
import Clases.Paciente;
import Clases.Sala_de_Espera;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class Problema1 extends javax.swing.JFrame {
    
    private Principal v1;
    
    /**
     * Creates new form Problema1
     */
    public Problema1() {
        initComponents();
    }

    public Problema1(Principal aThis) {
        initComponents();
        this.v1=aThis;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        campoNombrePaciente = new javax.swing.JTextField();
        campoEspecialidadPaciente = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        botonBuscar = new javax.swing.JButton();
        botonAtras = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        PantallaMostrarPaciente = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 153, 0));
        jLabel1.setText("BUSCAR PACIENTE X DE ESPECIALIDAD Y");

        jLabel2.setText("NOMBRE DEL PACIENTE X");

        jLabel3.setText("DATO DE ESPECIALIDAD QUE ESTA");

        botonBuscar.setText("BUSCAR");
        botonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarActionPerformed(evt);
            }
        });

        botonAtras.setText("ATRAS");
        botonAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAtrasActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(PantallaMostrarPaciente);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(191, 191, 191))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(botonAtras, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(botonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(campoEspecialidadPaciente, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(campoNombrePaciente, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(campoNombrePaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(campoEspecialidadPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74)
                        .addComponent(botonBuscar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addComponent(botonAtras)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAtrasActionPerformed
        // TODO add your handling code here:
        this.v1.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_botonAtrasActionPerformed

    private void botonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarActionPerformed
        // TODO add your handling code here:
        String nombreX, especialidadY;
        nombreX = campoNombrePaciente.getText();
        especialidadY = campoEspecialidadPaciente.getText();
        if (!(nombreX.equals("") || especialidadY.equals(""))) {
        NodoConsulta R = v1.getA().getConsulta().getP();
        String titulos[] = {"-* DATOS PACIENTE *-"};
        DefaultTableModel pantalla = new DefaultTableModel(null,titulos);
		while (R!=null) {
			Consulta co = R.getConsulta();
			if (co.getPaciente().getNombre().equals(nombreX)) {
				String nombreDoc = co.getDoc_Nombre_Atender();
				if (verificar_Doctor_con_especialidad(nombreDoc,v1.getA(),especialidadY)) {
                                    String id[] = {"ID : "+co.getPaciente().getId()};
                                    pantalla.addRow(id);
                                    String nombre[] = {"Nombre : "+co.getPaciente().getNombre()};
                                    pantalla.addRow(nombre);
                                    String urgencia[] = {"Urgencia : "+co.getPaciente().getCi()};
                                    pantalla.addRow(urgencia);
                                    String edad[] = {"Edad : "+Integer.toString(co.getPaciente().getEdad())}; 
                                    pantalla.addRow(edad);
                                    String Historial [] = {"\t**DATOS DE HISTORIAL**"};
                                    pantalla.addRow(Historial);
                                    String Id[] = {"Id Historial : "+co.getPaciente().getHistorial().getId()};
                                    pantalla.addRow(Id);
                                    String diagnostico [] = {"Diagnostico : "+co.getPaciente().getHistorial().getDiagnostico()}; 
                                    pantalla.addRow(diagnostico);
                                    String tratamiento[] = {"Tratamiento : "+co.getPaciente().getHistorial().getTratamiento()};
                                    pantalla.addRow(tratamiento);
                                    String CitasMe[] = {"\t-----CITAS MEDICAS----"};
                                    pantalla.addRow(CitasMe);
                                    Paciente pac = co.getPaciente();
                                    Historial his = pac.getHistorial();
                                    NodoCita S = his.getCita().getP();
                                    int nronodos = his.getCita().nroNodos();
                                    for (int i = 1; i <= nronodos; i++) {
                                        Cita cita = S.getCita();
                                        String nrCi[] = {"_____Cita nro ["+i+"] _____"};
                                        pantalla.addRow(nrCi);
                                        String idci[] = {"ID Cita : "+cita.getId()};
                                        pantalla.addRow(idci);
                                        String fechaci[] = {"ID Cita : "+cita.getFecha()};
                                        pantalla.addRow(fechaci);
                                        String Horaci[] = {"Hora : "+cita.getHora()};
                                        pantalla.addRow(Horaci);
                                        String Motivoci[] = {"Motivo : "+cita.getMotivo()};
                                        pantalla.addRow(Motivoci);
                                        String Nota[] = {"Nota informacion : "+cita.getNotaInf()};
                                        pantalla.addRow(Nota);
                                        String nomdoc[] = {"Nombre Doc Atendio : "+cita.getNomDoctorAtendido()};
                                        pantalla.addRow(nomdoc);
                                        S=S.getSig();
                                    }
                                    
                                    
				}else {
                                        JOptionPane.showMessageDialog(null,"No se pudo encotrar resultados de "+nombreX+" de la especialidad "+especialidadY);
				}
			}
			R=R.getSig();
		}
                PantallaMostrarPaciente.setModel(pantalla);
        }else{
            JOptionPane.showMessageDialog(null,"Datos no validos veuelva a llenar!!");
        }
    }//GEN-LAST:event_botonBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Problema1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Problema1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Problema1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Problema1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Problema1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable PantallaMostrarPaciente;
    private javax.swing.JButton botonAtras;
    private javax.swing.JButton botonBuscar;
    private javax.swing.JTextField campoEspecialidadPaciente;
    private javax.swing.JTextField campoNombrePaciente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables



    private boolean verificar_Doctor_con_especialidad(String nombreDoc, Sala_de_Espera sala, String especialidadY) {
			NodoConsultorio R = sala.getConsultorio().getP();
			boolean sw = false;
			int n = sala.getConsultorio().nroNodos();
			for (int i = 0; i < n; i++) {
				Consultorio con = R.getConsultorio();
				if (con.getNomEspecialidad().equals(especialidadY)) {
					int n1 = con.getDoctor().nroNodos();
					NodoDoctor S = con.getDoctor().getP();
					for (int j = 0; j < n1; j++) {
						Doctor doc = S.getDoctor();
						if (doc.getNombre().equals(nombreDoc)) {
							sw=true;
						}
						S=S.getSig();
					}
				}
				R=R.getSig(); 
			}
		return sw;
    }
}
